name: CI
on:
  - push
  - pull_request
jobs:
  denotest:
    name: WebAssembly Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: denoland/setup-deno@v1
        with:
          deno-version: v1.x
      - name: deno test
        working-directory: ./test
        run: deno test --allow-read ./deno-test
  juliatest:
    name: Julia ${{ matrix.version }} - ${{ matrix.os }} - ${{ matrix.arch }} - ${{ github.event_name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        version:
          - "1.6"
          - "nightly"
        os:
          - ubuntu-latest
        arch:
          - x64
    steps:
      - uses: actions/checkout@v2
      - uses: julia-actions/setup-julia@v1
        with:
          version: ${{ matrix.version }}
          arch: ${{ matrix.arch }}
      - uses: actions/cache@v1
        env:
          cache-name: cache-artifacts
        with:
          path: ~/.julia/artifacts
          key: ${{ runner.os }}-test-${{ env.cache-name }}-${{ hashFiles('**/Project.toml') }}
          restore-keys: |
            ${{ runner.os }}-test-${{ env.cache-name }}-
            ${{ runner.os }}-test-
            ${{ runner.os }}-
      - uses: julia-actions/julia-buildpkg@v1
      - uses: julia-actions/julia-runtest@v1
  docs:
    name: Documentation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: julia-actions/setup-julia@v1
        with:
          version: "1"
      - run: |
          julia --project=docs -e '
            using Pkg
            Pkg.develop(PackageSpec(path=pwd()))
            Pkg.instantiate()'
      - run: |
          julia --project=docs -e '
            using Documenter: DocMeta, doctest
            using WebAssemblyText
            DocMeta.setdocmeta!(WebAssemblyText, :DocTestSetup, :(using WebAssemblyText); recursive=true)
            doctest(WebAssemblyText)'
      - run: julia --project=docs docs/make.jl
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DOCUMENTER_KEY: ${{ secrets.DOCUMENTER_KEY }}
  slacknotify:
    name: Notify Slack
    runs-on: ubuntu-latest
    steps:
      - name: Notify Slack
        uses: fjogeleit/http-request-action@master
        with:
          url: "https://slack-andybot.herokuapp.com/webassemblytext-action"
          method: "POST"
          data: '{"supersafepassword":"abcda","commitmessage":"${{ github.event.head_commit.message }}"}'
          timeout: "10000"
